name: Build and Deploy to AWS ECS

on:
  repository_dispatch:
    types: [trigger-docker-build]
  push:
    branches: [main]
    paths:
      - '/**'

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: prod-ecs

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v3

    - name: Clone Repo A
      uses: actions/checkout@v3
      with:
        repository: vijaya49/Static-Web-Host-Dev
        token: ${{ secrets.REPO_B_PAT }}
        path: repo-a

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set short commit SHA as image tag with prefix
      run: echo "IMAGE_TAG=ecs-$(echo $GITHUB_SHA | cut -c1-5)" >> $GITHUB_ENV

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:latest -t $ECR_REPOSITORY:$IMAGE_TAG ./

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Tag and push Docker image
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG
        docker tag $ECR_REPOSITORY:latest ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG
        docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:latest

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var="image_tag=$IMAGE_TAG"

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="image_tag=$IMAGE_TAG"
